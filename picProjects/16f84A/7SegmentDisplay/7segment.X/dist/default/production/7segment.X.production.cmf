%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/production/newAsmTemplate.o
code CODE 0 3C0 3C0 40 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM C-4D 1
BANK0 C-4D 1
CONST 0-3BF 2
ENTRY 0-3BF 2
IDLOC 2000-2003 2
CODE 0-3BF 2
SFR0 0-B 1
SFR1 80-CD 1
COMMON 4E-4F 1
EEDATA 2100-213F 2
STRCODE 0-3BF 2
STRING 0-3BF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/production/newAsmTemplate.o
3C0 code CODE >19:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C1 code CODE >20:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C2 code CODE >21:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C3 code CODE >22:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C4 code CODE >23:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C5 code CODE >24:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C6 code CODE >25:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C7 code CODE >27:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C8 code CODE >30:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3C9 code CODE >31:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3CA code CODE >32:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3CB code CODE >33:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3CC code CODE >34:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3CD code CODE >36:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3CE code CODE >37:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3CF code CODE >38:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D0 code CODE >39:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D1 code CODE >40:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D2 code CODE >41:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D3 code CODE >42:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D4 code CODE >43:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D5 code CODE >44:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D6 code CODE >45:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D7 code CODE >46:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D8 code CODE >47:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3D9 code CODE >48:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3DA code CODE >49:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3DB code CODE >50:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3DC code CODE >51:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3DD code CODE >52:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3DE code CODE >53:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3DF code CODE >54:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E0 code CODE >55:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E1 code CODE >56:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E2 code CODE >57:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E3 code CODE >58:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E4 code CODE >59:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E5 code CODE >60:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E6 code CODE >61:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E7 code CODE >62:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E8 code CODE >63:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3E9 code CODE >64:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3EA code CODE >65:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3EB code CODE >66:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3EC code CODE >67:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3ED code CODE >68:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3EE code CODE >69:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3EF code CODE >70:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F0 code CODE >71:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F1 code CODE >72:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F2 code CODE >73:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F3 code CODE >74:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F4 code CODE >75:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F5 code CODE >76:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F6 code CODE >77:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F7 code CODE >79:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F8 code CODE >80:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3F9 code CODE >81:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3FA code CODE >83:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3FB code CODE >84:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3FC code CODE >85:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3FD code CODE >87:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3FE code CODE >88:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
3FF code CODE >89:E:\academics\6th sem\Embedded Systems\ASSIGNMENT2\ASSIGNMENT2\7segment.X\newAsmTemplate.asm
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 400 0 ABS 0 - -
__Hspace_1 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__Hudata_bank0 0 0 ABS 0 udata_bank0 -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__Hedata 0 0 ABS 0 edata -
__Hudata 0 0 ABS 0 udata -
__Hconfig 4010 0 CONFIG 4 config -
__Ledata 0 0 ABS 0 edata -
__Ludata 0 0 ABS 0 udata -
__Hcode 0 0 ABS 0 code -
__Hdata 0 0 ABS 0 data -
__Lcode 0 0 ABS 0 code -
__Ldata 0 0 ABS 0 data -
__S0 400 0 ABS 0 - -
__S1 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Ludata_bank0 0 0 ABS 0 udata_bank0 -
__H__absolute__ 0 0 ABS 0 __absolute__ -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
code 0 3C0 780 40 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
